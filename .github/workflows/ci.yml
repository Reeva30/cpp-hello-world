name: Install Qt VS Add-in and Build Qt Project

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test

env:
  DEVENV_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE
  DEVENV_PATH2: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out the main project repository
      uses: actions/checkout@v4
      with:
        repository: OT-OpenTwin/OpenTwin
        ref: Ci
        path: OpenTwin


    - name: Add Visual Studio to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.6.1'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'

    - name: Set Up Qt Environment
      run: |
        $qtPath = "${{ github.workspace }}\\Qt\\6.6.1\\msvc2019_64"
        echo "QTDIR=$qtPath" >> $GITHUB_ENV
        echo "QT_PLUGIN_PATH=$qtPath\\plugins" >> $GITHUB_ENV
        echo "$qtPath\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: powershell

    - name: Verify Qt Setup
      run: |
        echo "Verifying Qt setup..."
        if (-Not $env:QTDIR) {
          Write-Error "QTDIR is not set."
          exit 1
        }
        if (-Not (Get-Command qmake -ErrorAction SilentlyContinue)) {
          Write-Error "qmake is not found in PATH."
          exit 1
        }
        if (-Not (Get-Command moc -ErrorAction SilentlyContinue)) {
          Write-Error "moc is not found in PATH."
          exit 1
        }
        if (-Not (Get-Command uic -ErrorAction SilentlyContinue)) {
          Write-Error "uic is not found in PATH."
          exit 1
        }
        echo "Qt setup verified successfully."
      shell: powershell

    - name: Setup and Execute Build
      run: |
        echo "Current directory: %cd%"
        set OPENTWIN_DEV_ROOT=%cd%\OpenTwin
        set DEVENV_ROOT_2022=%DEVENV_PATH%
        set OPENTWIN_THIRDPARTY_ROOT=%cd%\ThirdParty
        echo "OPENTWIN_DEV_ROOT=%OPENTWIN_DEV_ROOT%"
        echo "DEVENV_ROOT_2022=%DEVENV_ROOT_2022%"
        echo "OPENTWIN_THIRDPARTY_ROOT=%OPENTWIN_THIRDPARTY_ROOT%"
        echo "Checking directories and necessary files..."
        echo "OpenTwin directory: %OPENTWIN_DEV_ROOT%"
        dir %OPENTWIN_DEV_ROOT%
        echo "ThirdParty directory: %OPENTWIN_THIRDPARTY_ROOT%"
        dir %OPENTWIN_THIRDPARTY_ROOT%
        echo "Visual Studio 2022 directory: %DEVENV_ROOT_2022%"
        dir "%DEVENV_ROOT_2022%"
        echo "Checking if BuildAll.bat exists..."
        if exist %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat (
          echo "Starting BuildAll.bat..."
          call %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat 
        ) else (
          echo "BuildAll.bat not found."
          exit /b 1
        )
      shell: cmd
