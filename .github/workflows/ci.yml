name: Setup and Build with Visual Studio 2022

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out the main project repository
      uses: actions/checkout@v2
      with:
        repository: OT-OpenTwin/OpenTwin
        ref: Ci
        path: OpenTwin

    - name: Check out the third-party repository
      uses: actions/checkout@v2
      with:
        repository: OT-OpenTwin/ThirdParty
        path: ThirdParty


    - name: Check and Install Rust 1.76.0
      run: |
        rustc --version | find "1.76.0" || choco install rust --version=1.76.0 -y
      shell: cmd

    - name: Install Visual Studio 2022 Community
      run: |
        choco install visualstudio2022community --package-parameters "--add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NetWeb --includeRecommended" -y

    - name: Add MSBuild to PATH
      run: |
        echo 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin' | Out-File -Append -FilePath $env:GITHUB_PATH

    - name: Print PATH variable
      run: |
        echo $env:Path

    - name: Check directory contents
      run: |
        $msbuildDir = 'C:\Program Files\Microsoft Visual Studio\2022\Community\Common7' 
        if (Test-Path $msbuildDir) {
          Get-ChildItem -Path $msbuildDir
        } else {
          Write-Output "MSBuild directory not found at $msbuildDir"
          exit 1
        }

            
    # Step 8: Set environment variables, check paths, and run BuildAll.bat
    - name: Setup and Execute Build
      run: |
        cd OT-OpenTwin
        echo "Setting up and executing build..."
        set OPENTWIN_DEV_ROOT=%cd%\OpenTwin
        set DEVENV_ROOT_2022="C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE"
        set OPENTWIN_THIRDPARTY_ROOT=%cd%\ThirdParty
        call .\BuildAll.bat
      shell: cmd
      continue-on-error: true  # Ensure subsequent steps run even if this fails
    
    # Step 9: Upload build log artifact
    - name: Upload build log
      if: always()  # This ensures the log is uploaded whether the previous steps fail or succeed
      uses: actions/upload-artifact@v2
      with:
        name: build-log
        path: OT-OpenTwin\OpenTwin\build.log
