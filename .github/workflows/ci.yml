name: Pull from separate repo and run build script

on:
  push:
    branches:
      - RunBuild

jobs:
  pull-other-repo:
    runs-on: windows-latest

    steps:
    # Step 1: Check out the main project repository
    - name: Check out the main project repository
      uses: actions/checkout@v2
      with:
        repository: OT-OpenTwin/OpenTwin
        ref: Ci
        path: OpenTwin

    # Step 2: Check out the third-party repository
    - name: Check out the third-party repository
      uses: actions/checkout@v2
      with:
        repository: OT-OpenTwin/ThirdParty
        path: ThirdParty

    # Step 3: Move repositories to C:\OT-OpenTwin
    - name: Move repositories to C drive
      run: |
        mkdir C:\OT-OpenTwin
        move OpenTwin C:\OT-OpenTwin\OpenTwin
        move ThirdParty C:\OT-OpenTwin\ThirdParty
      shell: cmd

    # Step 4: Install Visual Studio 2022 Build Tools
    - name: Install Visual Studio 2022 Build Tools
      run: |
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --quiet --wait"
      shell: cmd

    # Step 5: Install Rust 1.76.0
    - name: Install Rust 1.76.0
      run: |
        choco install rust --version=1.76.0 -y
      shell: cmd

    # Step 6: Display the files in the main project repository
    - name: List files in the main project repository
      run: dir C:\OT-OpenTwin\OpenTwin

    # Step 7: Display the files in the third-party repository
    - name: List files in the third-party repository
      run: dir C:\OT-OpenTwin\ThirdParty

    # Step 8: Set environment variables and check paths
    - name: Set environment variables and check paths
      run: |
        cd C:\OT-OpenTwin\OpenTwin
        echo "Current directory: %cd%"
        set OPENTWIN_DEV_ROOT=%cd%
        set OPENTWIN_THIRDPARTY_ROOT=C:\OT-OpenTwin\ThirdParty
        set DEVENV_ROOT_2022="C:\Program Files\Microsoft Visual Studio\2022\BuildTools\Common7\IDE"
        echo "OPENTWIN_DEV_ROOT=%OPENTWIN_DEV_ROOT%"
        echo "OPENTWIN_THIRDPARTY_ROOT=%OPENTWIN_THIRDPARTY_ROOT%"
        echo "DEVENV_ROOT_2022=%DEVENV_ROOT_2022%"
        echo "Checking if BuildAll.bat exists..."
        if exist .\Scripts\BuildAndTest\BuildAll.bat (
          echo "BuildAll.bat exists."
        ) else (
          echo "BuildAll.bat does not exist."
          exit /b 1
        )
        echo "Checking if RebuildAll.bat exists..."
        if exist %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\RebuildAll.bat (
          echo "RebuildAll.bat exists."
        ) else (
          echo "RebuildAll.bat does not exist."
        )
        echo "Checking if CheckForFailedBuilds.bat exists..."
        if exist %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\CheckForFailedBuilds.bat (
          echo "CheckForFailedBuilds.bat exists."
        ) else (
          echo "CheckForFailedBuilds.bat does not exist."
        )
        echo "All checks passed."
      shell: cmd

    # Step 9: Run the BuildAll.bat script and capture log
    - name: Run BuildAll.bat and capture log
      run: |
        cd C:\OT-OpenTwin\OpenTwin
        echo "Starting BuildAll.bat..."
        call .\Scripts\BuildAndTest\BuildAll.bat > build.log 2>&1
        echo "BuildAll.bat finished with exit code %ERRORLEVEL%"
        type build.log
      shell: cmd

    # Step 10: Upload build log artifact
    - name: Upload build log
      uses: actions/upload-artifact@v2
      with:
        name: build-log
        path: C:\OT-OpenTwin\OpenTwin\build.log
