name: Setup and Build with Visual Studio 2022

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out the main project repository
      uses: actions/checkout@v2
      with:
        repository: OT-OpenTwin/OpenTwin
        ref: Ci
        path: OpenTwin

    - name: Check out the third-party repository
      uses: actions/checkout@v2
      with:
        repository: OT-OpenTwin/ThirdParty
        path: ThirdParty
        fetch-depth: 1


    - name: Install Visual Studio 2022 Community
      run: |
        choco install visualstudio2022community --package-parameters "--add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NetWeb --includeRecommended" -y
      shell: cmd


    - name: Install Rust 1.76.0
      run: choco install rust --version=1.76.0 -y
      shell: cmd
      

    - name: Set DEVENV_ROOT_2022
      run: |
        $pathsToCheck = @(
          'C:\Program Files (x86)\Microsoft Visual Studio\2022\Community\Common7\IDE',
          'C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE'
        )
        $foundPath = $null
        foreach ($path in $pathsToCheck) {
          if (Test-Path $path) {
            $foundPath = $path
            break
          }
        }
        if ($null -ne $foundPath) {
          Write-Output "Visual Studio 2022 IDE directory found at $foundPath"
          echo "DEVENV_ROOT_2022=$foundPath" >> $env:GITHUB_ENV
          [Environment]::SetEnvironmentVariable("DEVENV_ROOT_2022", $foundPath, "Process")
        } else {
          Write-Output "Visual Studio 2022 IDE directory not found in expected locations"
          exit 1
        }
      shell: pwsh

    - name: Setup and Execute Build
      run: |
        cd OT-OpenTwin
        echo "Current directory: %cd%"
        set OPENTWIN_DEV_ROOT=%cd%\OpenTwin
        set OPENTWIN_THIRDPARTY_ROOT=%cd%\ThirdParty
        echo "OPENTWIN_DEV_ROOT=%OPENTWIN_DEV_ROOT%"
        echo "DEVENV_ROOT_2022=%DEVENV_ROOT_2022%"
        echo "OPENTWIN_THIRDPARTY_ROOT=%OPENTWIN_THIRDPARTY_ROOT%"
        echo "Checking directories and necessary files..."
        echo "OpenTwin directory: %OPENTWIN_DEV_ROOT%"
        dir %OPENTWIN_DEV_ROOT%
        echo "ThirdParty directory: %OPENTWIN_THIRDPARTY_ROOT%"
        dir %OPENTWIN_THIRDPARTY_ROOT%
        echo "Visual Studio 2022 directory: %DEVENV_ROOT_2022%"
        dir %DEVENV_ROOT_2022%
        if exist "%OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat" (
          echo "Starting BuildAll.bat..."
          call "%OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat"
        ) else (
          echo "BuildAll.bat does not exist."
          exit /b 1
        )
      shell: cmd
      timeout-minutes: 30
      continue-on-error: true

    - name: Output Build Debug Log
      if: always()
      run: type "%OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\buildLog_Debug.txt"
      shell: cmd

    - name: Output Build Release Log
      if: always()
      run: type "%OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\buildLog_Release.txt"
      shell: cmd

    - name: Upload Build Log Files
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          ${{ env.OPENTWIN_DEV_ROOT }}/Scripts/BuildAndTest/buildLog_Debug.txt
          ${{ env.OPENTWIN_DEV_ROOT }}/Scripts/BuildAndTest/buildLog_Release.txt
          
    - name: List Build Script Directory
      if: always()
      run: dir "%OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest"
      shell: cmd
