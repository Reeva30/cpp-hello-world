

name: C++ CI with Cached Artifacts

on:
  push:
    branches: [TestForMain]
  pull_request:
    branches: [TestForMain]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        archives: 'qtbase'
        set-env: 'true'

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; 
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; 
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install Visual Studio 2022
      run: choco install visualstudio2022community --package-parameters "--add Microsoft.VisualStudio.Workload.NativeDesktop --includeRecommended --includeOptional"

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: '1.76.0'
        override: true

    - name: Setup Qt Plugin for Visual Studio 2022
      shell: pwsh
      run: |
        Install-Module -Name PowerShellGet -Force -AllowClobber
        Install-Module -Name PackageManagement -Force -AllowClobber
        
        if (-not (Get-PackageProvider -Name NuGet -ErrorAction SilentlyContinue)) {
            Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        }
        
        Install-Module -Name VSSetup -Force -AllowClobber
        Import-Module VSSetup
        
        $vs = Get-VSSetupInstance -All -Requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64
        
        $qtVersion = '6.6.1'
        $qtPath = "$env:GITHUB_WORKSPACE\OpenTwin\Third_Party_Libraries\Qt\6.6.1\msvc2019_64"
        
        Start-Process -FilePath "$($vs.InstallationPath)\Common7\IDE\devenv.exe" -ArgumentList '/Command', 'QtToolsPackage.ManageQtVersions' -Wait
        Start-Process -FilePath "$($vs.InstallationPath)\Common7\IDE\devenv.exe" -ArgumentList '/Command', "QtToolsPackage.ManageQtVersions.AddVersion,$qtVersion,$qtPath" -Wait

    - name: Set Environment Variables
      run: |
        [System.Environment]::SetEnvironmentVariable('DEVENV_ROOT_2022', 'C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE', 'Machine')
        [System.Environment]::SetEnvironmentVariable('OPENTWIN_DEV_ROOT', "$env:GITHUB_WORKSPACE\OpenTwin\Repo", 'Machine')

    - name: Build OpenTwin
      run: |
        cd $env:GITHUB_WORKSPACE\OpenTwin\Repo\MasterBuild
        .\buildAll.bat
        .\createDeployment.bat

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
      shell: bash

    - name: Upload build artifacts to S3
      run: |
        aws s3 cp ${{ github.workspace }}\OpenTwin\Repo\Deployment s3://my-github-artifacts-bucket/deployment --recursive
      shell: bash
