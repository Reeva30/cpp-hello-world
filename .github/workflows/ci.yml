name: Simplified C++ Build and Test

on:
  push:
    branches: [try]
  pull_request:
    branches: [try]

jobs:
  build:
    name: Build C++ Code
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Install Visual Studio 2022 Build Tools
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Workload.NativeDesktop --add Microsoft.VisualStudio.Component.Windows10SDK --add Microsoft.VisualStudio.Component.VC.Redist.14.Latest"
          # Handle reboot error if necessary
        shell: powershell
        continue-on-error: true


      - name: Checkout Qt
        uses: actions/checkout@v3
        with:
          repository: 'OT-OpenTwin/ThirdParty'
          path: 'ThirdParty'
          ref: 'main'
          
      # Install Qt Visual Studio Tools extension
      - name: Install Qt Visual Studio Tools
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\IDE\VSIXInstaller.exe" /q /a "https://github.com/OT-OpenTwin/ThirdParty/raw/main/QtVisualStudioTools.vsix"
        shell: powershell

      # Configure Qt in Visual Studio
      - name: Configure Qt in Visual Studio
        run: |
          $vsInstallDir = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools"
          $qtVersion = "6.6.1"
          $qtPath = "${{ github.workspace }}\ThirdParty\Qt\$qtVersion\msvc2019_64"
          $vcvarsPath = Join-Path -Path $vsInstallDir -ChildPath "VC\Auxiliary\Build\vcvars64.bat"
          $qtConfigScript = Join-Path -Path $vsInstallDir -ChildPath "Common7\IDE\CommonExtensions\Microsoft\Qt6\qtconfig.ps1"
          & $vcvarsPath
          & $qtConfigScript -SetVersion $qtVersion -Path $qtPath
        shell: powershell

      - name: Install Rust (v1.76.0)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: '1.76.0'
          override: true

      - name: Verify Rust Installation
        run: |
          rustc --version

      - name: Cache CMake
        uses: actions/cache@v3
        with:
          path: C:\Program Files\CMake
          key: cmake-${{ runner.os }}

      - name: Install CMake
        if: steps.CacheCMake.outputs.cache-hit != 'true'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        shell: powershell
      
      - name: Set up Visual Studio Build Environment
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat"

      - name: Generate Build Files
        run: |
          cmake -B build -S .
          cmake --build build --config Release

      - name: Run the executable
        run: |
          & "$PWD/build/Release/main.exe"
        shell: powershell
