name: Build and Test C++ Project

on:
  push:
    branches:
      - Demo  # Adjust the branch as needed

jobs:
  setup-environment:
    runs-on: windows-latest

    steps:
      - name: Checkout all code repositories
        run: |
          git clone https://github.com/Reeva30/cpp-hello-world.git .
          git clone https://github.com/OT-OpenTwin/OpenTwin.git OpenTwin
          git clone https://github.com/OT-OpenTwin/ThirdParty.git ThirdParty

      - name: Set up Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Install Visual Studio 2022 Build Tools
        run: |
          choco install -y visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Workload.NativeDesktop --add Microsoft.VisualStudio.Component.Windows10SDK --add Microsoft.VisualStudio.Component.VC.Redist.14.Latest"

      - name: Install CMake
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Install Rust
        run: |
          choco install -y rust --version=1.76.0

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.2'

      - name: Upload environment setup
        uses: actions/upload-artifact@v3
        with:
          name: env-setup
          path: .  # Adjust the path to only include necessary files if needed

  build-and-test:
    runs-on: windows-latest
    needs: setup-environment

    steps:
      - name: Download environment setup
        uses: actions/download-artifact@v3
        with:
          name: env-setup

      - name: Cache CMake build
        uses: actions/cache@v3
        with:
          path: |
            build
          key: ${{ runner.os }}-cmake-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cmake-build-

      - name: Set up Visual Studio Build Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Generate Build Files with CMake
        run: |
          cmake -B build -S .

      - name: Build Project
        run: |
          cmake --build build --config Release

      - name: Check Build Artifact Size
        run: |
          du -sh build

      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Upload build artifacts to S3
        run: |
          aws s3 cp build s3://my-github-artifacts-bucket/build --recursive

  test:
    runs-on: windows-latest
    needs: build-and-test

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
