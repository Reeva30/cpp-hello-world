name: Simplified C++ Build and Test

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    name: Build C++ Code
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Visual Studio 2022 Build Tools using Chocolatey
      - name: Install Visual Studio 2022 Build Tools
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Workload.NativeDesktop"
        shell: powershell

      # Install Rust (v1.76.0)
      - name: Install Rust (v1.76.0)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: '1.76.0'
          override: true

      # Verify Rust Installation
      - name: Verify Rust Installation
        run: |
          rustc --version

      # Cache CMake for subsequent builds
      - name: Cache CMake
        uses: actions/cache@v3
        with:
          path: C:\Program Files\CMake
          key: cmake-${{ runner.os }}

      # Install CMake using Chocolatey if not cached
      - name: Install CMake
        if: steps.CacheCMake.outputs.cache-hit != 'true'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        shell: powershell
      
      # Set up the Visual Studio Build Environment
      - name: Set up Visual Studio Build Environment
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat"

     # Add QT Visual Studio Tools using Visual Studio Installer (command-line arguments)
      - name: Add QT Visual Studio Tools
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" modify --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools" --add Microsoft.VisualStudio.Component.QT.VisualStudioTools --quite

      # Generate build files using CMake
      - name: Generate Build Files
        run: |
          cmake -B . -S .
          cmake --build . --config Release  # Compile in Release mode

      # Run the resulting executable
      - name: Run the executable
        run: |
          Join-Path -Path $PWD -ChildPath "build\main.exe"

