name: Install Qt VS Add-in and Build Qt Project

on:
  push:
    branches:
      - try
  pull_request:
    branches:
      - try

env:
  DEVENV_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE
  DEVENV_PATH2: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Check out the main project repository
        uses: actions/checkout@v4
        with:
          repository: OT-OpenTwin/OpenTwin
          ref: Ci
          path: OpenTwin

      - name: Check out the ThirdParty repository
        uses: actions/checkout@v4
        with:
          repository: OT-OpenTwin/ThirdParty
          path: ThirdParty


      - name: Add Visual Studio to PATH
        uses: microsoft/setup-msbuild@v1.0.2

   


      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.6.1'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qtcharts qtwebengine'
          archives: 'qtbase qtsvg'
          cache: 'false'
          setup-python: 'true'
          tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'
          set-env: 'true'
          tools-only: 'false'
          aqtversion: '==3.1.*'
          py7zrversion: '==0.20.*'
          extra: '--external 7z'

      - name: Set Environment Variables for Qt and MSBuild
        shell: powershell
        run: |
          $env:QT_PATH="${{ github.workspace }}\ThirdParty\Qt\6.6.1\msvc2019_64"
          $env:QtMsBuild="${{ github.workspace }}\ThirdParty\QtMsBuild"
          $env:QtToolsPath="$env:QT_PATH\bin"
          $env:PATH="$env:QtToolsPath;$env:QtMsBuild;$env:PATH"
          Write-Output "QT_PATH=$env:QT_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Output "QtMsBuild=$env:QtMsBuild" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Output "QtToolsPath=$env:QtToolsPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Output "PATH=$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Environment variables set."

      - name: Verify Qt Setup
        shell: powershell
        run: |
          Write-Host "Verifying Qt setup..."
          if (-Not $env:QT_PATH) {
            Write-Host "QT_PATH is not set."
            exit 1
          }
          if (-Not (Get-Command qmake -ErrorAction SilentlyContinue)) {
            Write-Host "qmake could not be found"
            exit 1
          }
          if (-Not (Get-Command moc -ErrorAction SilentlyContinue)) {
            Write-Host "moc could not be found"
            exit 1
          }
          if (-Not (Get-Command uic -ErrorAction SilentlyContinue)) {
            Write-Host "uic could not be found"
            exit 1
          }
          Write-Host "Qt setup verified successfully."



     
      - name: Setup and Execute Build
        shell: cmd
        run: |
          echo "Current directory: %cd%"
          set OPENTWIN_DEV_ROOT=%cd%\OpenTwin
          set DEVENV_ROOT_2022=%DEVENV_PATH%
          set OPENTWIN_THIRDPARTY_ROOT=%cd%\ThirdParty
          echo "OPENTWIN_DEV_ROOT=%OPENTWIN_DEV_ROOT%"
          echo "DEVENV_ROOT_2022=%DEVENV_ROOT_2022%"
          echo "OPENTWIN_THIRDPARTY_ROOT=%OPENTWIN_THIRDPARTY_ROOT%"
          echo "Checking directories and necessary files..."
          echo "OpenTwin directory: %OPENTWIN_DEV_ROOT%"
          dir %OPENTWIN_DEV_ROOT%
          echo "ThirdParty directory: %OPENTWIN_THIRDPARTY_ROOT%"
          dir %OPENTWIN_THIRDPARTY_ROOT%
          echo "Visual Studio 2022 directory: %DEVENV_ROOT_2022%"
          dir "%DEVENV_ROOT_2022%"
          echo "Checking if BuildAll.bat exists..."
          if exist %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat (
            echo "Starting BuildAll.bat..."
            call %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat 
          ) else (
            echo "BuildAll.bat not found."
            exit /b 1
          )
